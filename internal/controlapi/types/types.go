// Code generated by goctl. DO NOT EDIT.
package types

type BaseResponse struct {
	ErrorCode int    `json:"error_code"`
	ErrorMsg  string `json:"error_msg"`
}

type UpstreamListResponse struct {
	BaseResponse
	Upstreams []RpcClientConfig `json:"upstreams"`
}

type MethodListResponse struct {
	BaseResponse
	List []Method `json:"list"`
}

type Method struct {
	Service string `json:"service"`
	Name    string `json:"name"`
}

type MethodListRequest struct {
	Upstream string `json:"upstream"`
}

type MethodDetailRequest struct {
	FullMethodName string `json:"full_method_name"`
}

type MethodDetailResponse struct {
	BaseResponse
	MethodName string    `json:"method_name"`
	ProtoDesc  string    `json:"proto_desc"`
	In         FieldItem `json:"in"`
	Out        FieldItem `json:"out"`
}

type FieldItem struct {
	Name      string `json:"name"`
	ProtoDesc string `json:"proto_desc"`
	JsonDesc  string `json:"json_desc"`
}

type CaseListRequest struct {
	MethodNames []string `json:"method_names"`
}

type CaseListResponse struct {
	BaseResponse
	Cases []Case `json:"cases"`
}

type Case struct {
	MethodName string `json:"method_name"`
	Name       string `json:"name"`
	Rule       string `json:"rule, optional"`
	Body       string `json:"body"`
}

type CaseDelRequest struct {
	MethodName string `json:"method_name"`
	Name       string `json:"name"`
}

type CaseDelRespnse struct {
	BaseResponse
}

type CaseSetRequest struct {
	Cases []Case `json:"cases"`
}

type CaseSetResponse struct {
	BaseResponse
}

type CaseDetailRequest struct {
	MethodName string `json:"method_name"`
	Name       string `json:"name"`
}

type CaseDetailResponse struct {
	BaseResponse
	Detail Case `json:"detail"`
}

type UpstreamSetRequest struct {
	Upstreams []RpcClientConfig `json:"upstreams"`
}

type UpstreamSetResponse struct {
	BaseResponse
}

type UpstreamDelRequest struct {
	Upstreams []string `json:"upstreams"`
}

type UpstreamDelResponse struct {
	BaseResponse
}

type RpcClientConfig struct {
	Name      string   `json:"name"`
	Etcd      EtcdConf `json:",optional"`
	Endpoints []string `json:",optional"`
	Target    string   `json:",optional"`
	App       string   `json:",optional"`
	Token     string   `json:",optional"`
}

type EtcdConf struct {
	Hosts              []string `json:",optional"`
	Key                string   `json:",optional"`
	ID                 int64    `json:",optional"`
	User               string   `json:",optional"`
	Pass               string   `json:",optional"`
	CertFile           string   `json:",optional"`
	CertKeyFile        string   `json:",optional"`
	CACertFile         string   `json:",optional"`
	InsecureSkipVerify bool     `json:",optional"`
}
